{"version":3,"sources":["Components/Filter/Filter.module.css","Components/ContactItem/ContactItem.module.css","Components/ContactsList/ContactList.module.css","Components/Loader/Loader.module.css","App.module.css","Components/Section/Section.module.css","Components/Form/Form.module.css","Components/ContactItem/ContactItem.js","Components/Loader/Loader.js","redux/contacts-actions.js","redux/contacts-operations.js","redux/contacts-selectors.js","Components/ContactsList/ContactsList.js","Components/Form/Form.js","Components/Filter/Filter.js","Components/TotalNumber/TotalNumber.js","Components/Section/Section.js","App.js","redux/contacts-reducer.js","redux/store.js","index.js"],"names":["module","exports","ContactItem","name","number","deleteContact","className","s","btn__list","onClick","LoaderPage","loader","type","color","height","width","timeout","fetchContactsRequest","createAction","fetchContactsSuccess","fetchContactsError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","changeFilter","axios","defaults","baseURL","getContacts","state","contacts","items","getFilter","filter","getIsLoading","isLoading","filteredContacts","console","log","normalizedContact","toLowerCase","includes","ContactsList","contactsByFilter","useSelector","loadingContacts","dispatch","useDispatch","useEffect","get","then","data","catch","error","onDeleteContact","id","delete","Loader","length","item","map","Form","useState","setName","setNumber","handleChange","event","target","value","handleSubmit","preventDefault","sameName","existName","nameHandler","find","existNameHandler","contact","alert","post","addContact","form_wrapper","title","onSubmit","wrap__input","caption","input","placeholder","required","onChange","contactBtn","Filter","filter__wrap","filtter_title","filter__caption","filter_input","contactsActions","connect","total","Section","children","section","App","app__wrap","createReducer","_","payload","loading","combineReducers","middleware","getDefaultMiddleware","logger","store","configureStore","reducer","contactsReducer","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5db18a93.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter__wrap\":\"Filter_filter__wrap__Jg7ya\",\"filtter_title\":\"Filter_filtter_title__3zcNV\",\"filter_input\":\"Filter_filter_input__2vnwE\",\"filter__caption\":\"Filter_filter__caption__1ABye\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn__list\":\"ContactItem_btn__list__7lVoB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactList_item__1c7LL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"Loader_loader__21nCC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app__wrap\":\"App_app__wrap__3BUU7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__snUHO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Form_title__1ii-C\",\"caption\":\"Form_caption__3h5tb\",\"contactBtn\":\"Form_contactBtn__2hADS\",\"stripes\":\"Form_stripes__1JeJK\",\"input\":\"Form_input__2o61r\"};","import PropTypes from 'prop-types';\nimport s from './ContactItem.module.css';\n\nconst ContactItem = ({ name, number, deleteContact }) => {\n  return (\n    <li>\n      <p>\n        {name}: {number}\n      </p>\n      <button className={s.btn__list} onClick={deleteContact}>\n        Delete\n      </button>\n    </li>\n  );\n};\n\nContactItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  deleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactItem;\n","import Loader from 'react-loader-spinner';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\nimport s from './Loader.module.css';\n\nconst LoaderPage = () => {\n  return (\n    <div className={s.loader}>\n      <Loader\n        type=\"ThreeDots\"\n        color=\"#FF1493\"\n        height={80}\n        width={80}\n        timeout={2000}\n      />\n    </div>\n  );\n};\n\nexport default LoaderPage;\n","import { createAction } from '@reduxjs/toolkit';\n\nexport const fetchContactsRequest = createAction(\n  'contacts/fetchContactsRequest',\n);\nexport const fetchContactsSuccess = createAction(\n  'contacts/fetchContactsSuccess',\n);\nexport const fetchContactsError = createAction('contacts/fetchContactsError');\n\nexport const addContactRequest = createAction('contacts/addContactRequest');\nexport const addContactSuccess = createAction('contacts/addContactSuccess');\nexport const addContactError = createAction('contacts/addContactError');\n\nexport const deleteContactRequest = createAction(\n  'contacts/deleteContactRequest',\n);\nexport const deleteContactSuccess = createAction(\n  'contacts/deleteContactSuccess',\n);\nexport const deleteContactError = createAction('contacts/deleteContactError');\n\nexport const changeFilter = createAction('contacts/changeFilter');\n","import axios from 'axios';\nimport {\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  fetchContactsError,\n} from './contacts-actions';\n\naxios.defaults.baseURL = 'http://localhost:3000';\n\nexport const fetchContacts = () => dispatch => {\n  dispatch(fetchContactsRequest());\n\n  axios\n    .get('/contacts')\n    .then(({ data }) => dispatch(fetchContactsSuccess(data)))\n    .catch(error => dispatch(fetchContactsError(error)));\n};\n\nexport const addContact = contact => dispatch => {\n  dispatch(addContactRequest());\n\n  axios\n    .post('/contacts', contact)\n    .then(({ data }) => dispatch(addContactSuccess(data)))\n    .catch(error => dispatch(addContactError(error)));\n};\n\nexport const deleteContact = id => dispatch => {\n  dispatch(deleteContactRequest());\n\n  axios\n    .delete(`/contacts/${id}`)\n    .then(() => dispatch(deleteContactSuccess(id)))\n    .catch(error => dispatch(deleteContactError(error)));\n};\n","export const getContacts = state => state.contacts.items;\nexport const getFilter = state => state.contacts.filter;\n\nexport const getIsLoading = state => state.isLoading;\n\nexport const filteredContacts = state => {\n  const contacts = getContacts(state);\n  console.log('contacts', contacts);\n  const filter = getFilter(state);\n  const normalizedContact = filter.toLowerCase();\n\n  return contacts.filter(({ name }) =>\n    name.toLowerCase().includes(normalizedContact),\n  );\n};\n","import PropTypes from 'prop-types';\nimport ContactItem from '../ContactItem/ContactItem';\nimport s from './ContactList.module.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\nimport Loader from '../Loader/Loader';\nimport { deleteContact, fetchContacts } from '../../redux/contacts-operations';\nimport { filteredContacts, getIsLoading } from '../../redux/contacts-selectors';\n\nconst ContactsList = () => {\n  const contactsByFilter = useSelector(filteredContacts);\n  const loadingContacts = useSelector(getIsLoading);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const onDeleteContact = id => dispatch(deleteContact(id));\n\n  return (\n    <>\n      {loadingContacts && <Loader />}\n      {!loadingContacts && contactsByFilter && contactsByFilter.length > 0 ? (\n        <ul className={s.item}>\n          {contactsByFilter.map(({ id, name, number }) => (\n            <ContactItem\n              key={id}\n              name={name}\n              number={number}\n              deleteContact={() => onDeleteContact(id)}\n            />\n          ))}\n        </ul>\n      ) : null}\n    </>\n  );\n};\n\nContactsList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nexport default ContactsList;\n","import React, { useState } from 'react';\nimport s from './Form.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getContacts } from '../../redux/contacts-selectors';\nimport { addContact } from '../../redux/contacts-operations';\n\nexport default function Form() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const contacts = useSelector(getContacts);\n  const dispatch = useDispatch();\n\n  const handleChange = event => {\n    const { name, value } = event.target;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        break;\n    }\n  };\n\n  const existNameHandler = existName => {\n    const nameHandler = existName.toLowerCase();\n    return contacts.find(({ name }) => name.toLowerCase() === nameHandler);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const sameName = existNameHandler(name);\n    const contact = { id: name, name, number };\n\n    if (sameName) {\n      alert(`${name} is already in your phonebook`);\n    } else {\n      dispatch(addContact({ name, number }));\n    }\n\n    if (contact === '') {\n      return alert('Enter values');\n    }\n\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <div className={s.form_wrapper}>\n      <h1 className={s.title}>Phonebook</h1>\n      <form onSubmit={event => handleSubmit(event)}>\n        <div className={s.wrap__input}>\n          <p className={s.caption}>Number</p>\n          <input\n            className={s.input}\n            type=\"text\"\n            name=\"name\"\n            placeholder=\"Enter name\"\n            required\n            value={name}\n            onChange={handleChange}\n          />\n          <p className={s.caption}>Name</p>\n          <input\n            className={s.input}\n            type=\"tel\"\n            name={'number'}\n            placeholder=\"Enter number\"\n            value={number}\n            onChange={handleChange}\n            required\n          />\n        </div>\n\n        <button className={s.contactBtn} type=\"submit\">\n          Add Contact\n        </button>\n      </form>\n    </div>\n  );\n}\n","import s from './Filter.module.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getFilter } from '../../redux/contacts-selectors';\nimport * as contactsActions from '../../redux/contacts-actions';\n\nconst Filter = () => {\n  const value = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  return (\n    <div className={s.filter__wrap}>\n      <h2 className={s.filtter_title}>Contacts</h2>\n      <p className={s.filter__caption}>Find contacts by name</p>\n      <input\n        className={s.filter_input}\n        type=\"text\"\n        name=\"filter\"\n        value={value}\n        onChange={event =>\n          dispatch(contactsActions.changeFilter(event.target.value))\n        }\n        placeholder=\"Enter name for Search\"\n      />\n    </div>\n  );\n};\n\nexport default Filter;\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nconst TotalNumber = ({ total }) => {\n  return (\n    <div>\n      <p>Number of contacts: {total}</p>\n    </div>\n  );\n};\n\nconst mapStateToProps = state => ({\n  total: state.contacts.items.length,\n});\n\nexport default connect(mapStateToProps)(TotalNumber);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './Section.module.css';\n\nfunction Section({ title, children }) {\n  return (\n    <section className={s.section}>\n      <div>\n        {title && <h2>{title}</h2>}\n        {children}\n      </div>\n    </section>\n  );\n}\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node,\n};\n\nexport default Section;\n","import React from 'react';\nimport ContactsList from './Components/ContactsList/ContactsList';\nimport Form from './Components/Form/Form';\nimport Filter from './Components/Filter/Filter';\nimport s from './App.module.css';\nimport TotalNumber from './Components/TotalNumber/TotalNumber';\nimport Section from './Components/Section/Section';\n\nfunction App() {\n  return (\n    <div className={s.app__wrap}>\n      <Section>\n        <Form />\n      </Section>\n      <Section>\n        <Filter />\n        <TotalNumber />\n        <ContactsList />\n      </Section>\n    </div>\n  );\n}\n\nexport default App;\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport {\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  fetchContactsError,\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n  changeFilter,\n} from './contacts-actions';\n\nconst items = createReducer([], {\n  [fetchContactsSuccess]: (_, { payload }) => payload,\n  [addContactSuccess]: (state, { payload }) => [...state, payload],\n  [deleteContactSuccess]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst filter = createReducer('', {\n  [changeFilter]: (_, { payload }) => payload,\n});\n\nconst loading = createReducer(false, {\n  [addContactRequest]: () => true,\n  [addContactSuccess]: () => false,\n  [addContactError]: () => false,\n\n  [deleteContactRequest]: () => true,\n  [deleteContactSuccess]: () => false,\n  [deleteContactError]: () => false,\n\n  [fetchContactsRequest]: () => true,\n  [fetchContactsSuccess]: () => false,\n  [fetchContactsError]: () => false,\n});\n\nexport default combineReducers({\n  items,\n  filter,\n  loading,\n});\n","import contactsReducer from './contacts-reducer';\nimport { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport logger from 'redux-logger';\n\nconst middleware = [...getDefaultMiddleware(), logger];\n\nexport const store = configureStore({\n  reducer: {\n    contacts: contactsReducer,\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport store from './redux/store';\nimport { Provider } from 'react-redux';\nimport 'modern-normalize/modern-normalize.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}